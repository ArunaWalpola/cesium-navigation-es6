import{defined,Math as CesiumMath,getTimestamp,EventHelper,Transforms,SceneMode,Cartesian2,Cartesian3,Matrix4,BoundingSphere,HeadingPitchRange,knockout}from"cesium";import loadView from"../core/loadView";import ResetViewNavigationControl from"./ResetViewNavigationControl";import ZoomNavigationControl from"./ZoomNavigationControl";import svgCompassOuterRing from"../svgPaths/svgCompassOuterRing";import svgCompassGyro from"../svgPaths/svgCompassGyro";import svgCompassRotationMarker from"../svgPaths/svgCompassRotationMarker";import Utils from"../core/Utils";var Knockout=knockout,NavigationViewModel=function(t){this.terria=t.terria,this.eventHelper=new EventHelper,this.enableZoomControls=!defined(t.enableZoomControls)||t.enableZoomControls,this.enableCompass=!defined(t.enableCompass)||t.enableCompass,this.navigationLocked=!1,this.controls=t.controls,defined(this.controls)||(this.controls=[new ZoomNavigationControl(this.terria,!0),new ResetViewNavigationControl(this.terria),new ZoomNavigationControl(this.terria,!1)]),this.svgCompassOuterRing=svgCompassOuterRing,this.svgCompassGyro=svgCompassGyro,this.svgCompassRotationMarker=svgCompassRotationMarker,this.showCompass=defined(this.terria)&&this.enableCompass,this.heading=this.showCompass?this.terria.scene.camera.heading:0,this.isOrbiting=!1,this.orbitCursorAngle=0,this.orbitCursorOpacity=0,this.orbitLastTimestamp=0,this.orbitFrame=void 0,this.orbitIsLook=!1,this.orbitMouseMoveFunction=void 0,this.orbitMouseUpFunction=void 0,this.isRotating=!1,this.rotateInitialCursorAngle=void 0,this.rotateFrame=void 0,this.rotateIsLook=!1,this.rotateMouseMoveFunction=void 0,this.rotateMouseUpFunction=void 0,this._unsubcribeFromPostRender=void 0,Knockout.track(this,["controls","showCompass","heading","isOrbiting","orbitCursorAngle","isRotating"]);var e=this;function o(){defined(e.terria)?(e._unsubcribeFromPostRender&&(e._unsubcribeFromPostRender(),e._unsubcribeFromPostRender=void 0),e.showCompass=e.enableCompass,e._unsubcribeFromPostRender=e.terria.scene.postRender.addEventListener((function(){e.heading=e.terria.scene.camera.heading}))):(e._unsubcribeFromPostRender&&(e._unsubcribeFromPostRender(),e._unsubcribeFromPostRender=void 0),e.showCompass=!1)}NavigationViewModel.prototype.setNavigationLocked=function(t){this.navigationLocked=t,this.controls&&this.controls.length>1&&this.controls[1].setNavigationLocked(this.navigationLocked)},this.eventHelper.add(this.terria.afterWidgetChanged,o,this),o()};NavigationViewModel.prototype.destroy=function(){this.eventHelper.removeAll()},NavigationViewModel.prototype.show=function(t){var e;this.enableZoomControls&&this.enableCompass?e='<div class="compass" title="" data-bind="visible: showCompass, event: { mousedown: handleMouseDown, dblclick: handleDoubleClick }"><div class="compass-outer-ring-background"></div> <div class="compass-rotation-marker" data-bind="visible: isOrbiting, style: { transform: \'rotate(-\' + orbitCursorAngle + \'rad)\', \'-webkit-transform\': \'rotate(-\' + orbitCursorAngle + \'rad)\', opacity: orbitCursorOpacity }, cesiumSvgPath: { path: svgCompassRotationMarker, width: 145, height: 145 }"></div> <div class="compass-outer-ring" title="" data-bind="style: { transform: \'rotate(-\' + heading + \'rad)\', \'-webkit-transform\': \'rotate(-\' + heading + \'rad)\' }, cesiumSvgPath: { path: svgCompassOuterRing, width: 145, height: 145 }"></div> <div class="compass-gyro-background"></div> <div class="compass-gyro" data-bind="cesiumSvgPath: { path: svgCompassGyro, width: 145, height: 145 }, css: { \'compass-gyro-active\': isOrbiting }"></div></div><div class="navigation-controls">\x3c!-- ko foreach: controls --\x3e<div data-bind="click: activate, attr: { title: $data.name }, css: $root.isLastControl($data) ? \'navigation-control-last\' : \'navigation-control\' ">   \x3c!-- ko if: $data.hasText --\x3e   <div data-bind="text: $data.text, css: $data.isActive ?  \'navigation-control-icon-active \' + $data.cssClass : $data.cssClass"></div>   \x3c!-- /ko --\x3e  \x3c!-- ko ifnot: $data.hasText --\x3e  <div data-bind="cesiumSvgPath: { path: $data.svgIcon, width: $data.svgWidth, height: $data.svgHeight }, css: $data.isActive ?  \'navigation-control-icon-active \' + $data.cssClass : $data.cssClass"></div>  \x3c!-- /ko --\x3e </div> \x3c!-- /ko --\x3e</div>':!this.enableZoomControls&&this.enableCompass?e='<div class="compass" title="" data-bind="visible: showCompass, event: { mousedown: handleMouseDown, dblclick: handleDoubleClick }"><div class="compass-outer-ring-background"></div> <div class="compass-rotation-marker" data-bind="visible: isOrbiting, style: { transform: \'rotate(-\' + orbitCursorAngle + \'rad)\', \'-webkit-transform\': \'rotate(-\' + orbitCursorAngle + \'rad)\', opacity: orbitCursorOpacity }, cesiumSvgPath: { path: svgCompassRotationMarker, width: 145, height: 145 }"></div> <div class="compass-outer-ring" title="" data-bind="style: { transform: \'rotate(-\' + heading + \'rad)\', \'-webkit-transform\': \'rotate(-\' + heading + \'rad)\' }, cesiumSvgPath: { path: svgCompassOuterRing, width: 145, height: 145 }"></div> <div class="compass-gyro-background"></div> <div class="compass-gyro" data-bind="cesiumSvgPath: { path: svgCompassGyro, width: 145, height: 145 }, css: { \'compass-gyro-active\': isOrbiting }"></div></div><div class="navigation-controls"  style="display: none;" >\x3c!-- ko foreach: controls --\x3e<div data-bind="click: activate, attr: { title: $data.name }, css: $root.isLastControl($data) ? \'navigation-control-last\' : \'navigation-control\' ">   \x3c!-- ko if: $data.hasText --\x3e   <div data-bind="text: $data.text, css: $data.isActive ?  \'navigation-control-icon-active \' + $data.cssClass : $data.cssClass"></div>   \x3c!-- /ko --\x3e  \x3c!-- ko ifnot: $data.hasText --\x3e  <div data-bind="cesiumSvgPath: { path: $data.svgIcon, width: $data.svgWidth, height: $data.svgHeight }, css: $data.isActive ?  \'navigation-control-icon-active \' + $data.cssClass : $data.cssClass"></div>  \x3c!-- /ko --\x3e </div> \x3c!-- /ko --\x3e</div>':this.enableZoomControls&&!this.enableCompass?e='<div class="compass"  style="display: none;" title="" data-bind="visible: showCompass, event: { mousedown: handleMouseDown, dblclick: handleDoubleClick }"><div class="compass-outer-ring-background"></div> <div class="compass-rotation-marker" data-bind="visible: isOrbiting, style: { transform: \'rotate(-\' + orbitCursorAngle + \'rad)\', \'-webkit-transform\': \'rotate(-\' + orbitCursorAngle + \'rad)\', opacity: orbitCursorOpacity }, cesiumSvgPath: { path: svgCompassRotationMarker, width: 145, height: 145 }"></div> <div class="compass-outer-ring" title="" data-bind="style: { transform: \'rotate(-\' + heading + \'rad)\', \'-webkit-transform\': \'rotate(-\' + heading + \'rad)\' }, cesiumSvgPath: { path: svgCompassOuterRing, width: 145, height: 145 }"></div> <div class="compass-gyro-background"></div> <div class="compass-gyro" data-bind="cesiumSvgPath: { path: svgCompassGyro, width: 145, height: 145 }, css: { \'compass-gyro-active\': isOrbiting }"></div></div><div class="navigation-controls"    >\x3c!-- ko foreach: controls --\x3e<div data-bind="click: activate, attr: { title: $data.name }, css: $root.isLastControl($data) ? \'navigation-control-last\' : \'navigation-control\' ">   \x3c!-- ko if: $data.hasText --\x3e   <div data-bind="text: $data.text, css: $data.isActive ?  \'navigation-control-icon-active \' + $data.cssClass : $data.cssClass"></div>   \x3c!-- /ko --\x3e  \x3c!-- ko ifnot: $data.hasText --\x3e  <div data-bind="cesiumSvgPath: { path: $data.svgIcon, width: $data.svgWidth, height: $data.svgHeight }, css: $data.isActive ?  \'navigation-control-icon-active \' + $data.cssClass : $data.cssClass"></div>  \x3c!-- /ko --\x3e </div> \x3c!-- /ko --\x3e</div>':this.enableZoomControls||this.enableCompass||(e='<div class="compass"  style="display: none;" title="" data-bind="visible: showCompass, event: { mousedown: handleMouseDown, dblclick: handleDoubleClick }"><div class="compass-outer-ring-background"></div> <div class="compass-rotation-marker" data-bind="visible: isOrbiting, style: { transform: \'rotate(-\' + orbitCursorAngle + \'rad)\', \'-webkit-transform\': \'rotate(-\' + orbitCursorAngle + \'rad)\', opacity: orbitCursorOpacity }, cesiumSvgPath: { path: svgCompassRotationMarker, width: 145, height: 145 }"></div> <div class="compass-outer-ring" title="" data-bind="style: { transform: \'rotate(-\' + heading + \'rad)\', \'-webkit-transform\': \'rotate(-\' + heading + \'rad)\' }, cesiumSvgPath: { path: svgCompassOuterRing, width: 145, height: 145 }"></div> <div class="compass-gyro-background"></div> <div class="compass-gyro" data-bind="cesiumSvgPath: { path: svgCompassGyro, width: 145, height: 145 }, css: { \'compass-gyro-active\': isOrbiting }"></div></div><div class="navigation-controls"   style="display: none;" >\x3c!-- ko foreach: controls --\x3e<div data-bind="click: activate, attr: { title: $data.name }, css: $root.isLastControl($data) ? \'navigation-control-last\' : \'navigation-control\' ">   \x3c!-- ko if: $data.hasText --\x3e   <div data-bind="text: $data.text, css: $data.isActive ?  \'navigation-control-icon-active \' + $data.cssClass : $data.cssClass"></div>   \x3c!-- /ko --\x3e  \x3c!-- ko ifnot: $data.hasText --\x3e  <div data-bind="cesiumSvgPath: { path: $data.svgIcon, width: $data.svgWidth, height: $data.svgHeight }, css: $data.isActive ?  \'navigation-control-icon-active \' + $data.cssClass : $data.cssClass"></div>  \x3c!-- /ko --\x3e </div> \x3c!-- /ko --\x3e</div>'),loadView(e,t,this)},NavigationViewModel.prototype.add=function(t){this.controls.push(t)},NavigationViewModel.prototype.remove=function(t){this.controls.remove(t)},NavigationViewModel.prototype.isLastControl=function(t){return t===this.controls[this.controls.length-1]};var vectorScratch=new Cartesian2;NavigationViewModel.prototype.handleMouseDown=function(t,e){if(this.terria.scene.mode===SceneMode.MORPHING)return!0;if(t.navigationLocked)return!0;var o=e.currentTarget,a=e.currentTarget.getBoundingClientRect(),i=a.width/2,s=new Cartesian2((a.right-a.left)/2,(a.bottom-a.top)/2),r=new Cartesian2(e.clientX-a.left,e.clientY-a.top),n=Cartesian2.subtract(r,s,vectorScratch),c=Cartesian2.magnitude(n)/i;if(c<50/145)orbit(this,o,n);else{if(!(c<1))return!0;rotate(this,o,n)}};var oldTransformScratch=new Matrix4,newTransformScratch=new Matrix4,centerScratch=new Cartesian3;function orbit(t,e,o){var a=t.terria.scene,i=a.screenSpaceCameraController;if(a.mode!==SceneMode.MORPHING&&i.enableInputs){if(t.navigationLocked)return!0;switch(a.mode){case SceneMode.COLUMBUS_VIEW:if(i.enableLook)break;if(!i.enableTranslate||!i.enableTilt)return;break;case SceneMode.SCENE3D:if(i.enableLook)break;if(!i.enableTilt||!i.enableRotate)return;break;case SceneMode.SCENE2D:if(!i.enableTranslate)return}document.removeEventListener("mousemove",t.orbitMouseMoveFunction,!1),document.removeEventListener("mouseup",t.orbitMouseUpFunction,!1),defined(t.orbitTickFunction)&&t.terria.clock.onTick.removeEventListener(t.orbitTickFunction),t.orbitMouseMoveFunction=void 0,t.orbitMouseUpFunction=void 0,t.orbitTickFunction=void 0,t.isOrbiting=!0,t.orbitLastTimestamp=getTimestamp();var s=a.camera;if(defined(t.terria.trackedEntity))t.orbitFrame=void 0,t.orbitIsLook=!1;else{var r=Utils.getCameraFocus(t.terria,!0,centerScratch);defined(r)?(t.orbitFrame=Transforms.eastNorthUpToFixedFrame(r,a.globe.ellipsoid,newTransformScratch),t.orbitIsLook=!1):(t.orbitFrame=Transforms.eastNorthUpToFixedFrame(s.positionWC,a.globe.ellipsoid,newTransformScratch),t.orbitIsLook=!0)}t.orbitTickFunction=function(e){var o,i=getTimestamp(),r=(i-t.orbitLastTimestamp)*(2.5*(t.orbitCursorOpacity-.5)/1e3),n=t.orbitCursorAngle+CesiumMath.PI_OVER_TWO,c=Math.cos(n)*r,d=Math.sin(n)*r;if(t.navigationLocked)return!0;defined(t.orbitFrame)&&(o=Matrix4.clone(s.transform,oldTransformScratch),s.lookAtTransform(t.orbitFrame)),a.mode===SceneMode.SCENE2D?s.move(new Cartesian3(c,d,0),Math.max(a.canvas.clientWidth,a.canvas.clientHeight)/100*s.positionCartographic.height*r):t.orbitIsLook?(s.look(Cartesian3.UNIT_Z,-c),s.look(s.right,-d)):(s.rotateLeft(c),s.rotateUp(d)),defined(t.orbitFrame)&&s.lookAtTransform(o),t.orbitLastTimestamp=i},t.orbitMouseMoveFunction=function(t){var o=e.getBoundingClientRect(),a=new Cartesian2((o.right-o.left)/2,(o.bottom-o.top)/2),i=new Cartesian2(t.clientX-o.left,t.clientY-o.top);n(Cartesian2.subtract(i,a,vectorScratch),o.width)},t.orbitMouseUpFunction=function(e){t.isOrbiting=!1,document.removeEventListener("mousemove",t.orbitMouseMoveFunction,!1),document.removeEventListener("mouseup",t.orbitMouseUpFunction,!1),defined(t.orbitTickFunction)&&t.terria.clock.onTick.removeEventListener(t.orbitTickFunction),t.orbitMouseMoveFunction=void 0,t.orbitMouseUpFunction=void 0,t.orbitTickFunction=void 0},document.addEventListener("mousemove",t.orbitMouseMoveFunction,!1),document.addEventListener("mouseup",t.orbitMouseUpFunction,!1),t.terria.clock.onTick.addEventListener(t.orbitTickFunction),n(o,e.getBoundingClientRect().width)}function n(e,o){var a=Math.atan2(-e.y,e.x);t.orbitCursorAngle=CesiumMath.zeroToTwoPi(a-CesiumMath.PI_OVER_TWO);var i=Cartesian2.magnitude(e),s=o/2,r=Math.min(i/s,1),n=.5*r*r+.5;t.orbitCursorOpacity=n}}function rotate(t,e,o){var a=t.terria.scene,i=a.camera,s=a.screenSpaceCameraController;if(a.mode!==SceneMode.MORPHING&&a.mode!==SceneMode.SCENE2D&&s.enableInputs){if(t.navigationLocked)return!0;if(s.enableLook||a.mode!==SceneMode.COLUMBUS_VIEW&&(a.mode!==SceneMode.SCENE3D||s.enableRotate)){if(document.removeEventListener("mousemove",t.rotateMouseMoveFunction,!1),document.removeEventListener("mouseup",t.rotateMouseUpFunction,!1),t.rotateMouseMoveFunction=void 0,t.rotateMouseUpFunction=void 0,t.isRotating=!0,t.rotateInitialCursorAngle=Math.atan2(-o.y,o.x),defined(t.terria.trackedEntity))t.rotateFrame=void 0,t.rotateIsLook=!1;else{var r=Utils.getCameraFocus(t.terria,!0,centerScratch);defined(r)&&(a.mode!==SceneMode.COLUMBUS_VIEW||s.enableLook||s.enableTranslate)?(t.rotateFrame=Transforms.eastNorthUpToFixedFrame(r,a.globe.ellipsoid,newTransformScratch),t.rotateIsLook=!1):(t.rotateFrame=Transforms.eastNorthUpToFixedFrame(i.positionWC,a.globe.ellipsoid,newTransformScratch),t.rotateIsLook=!0)}var n;defined(t.rotateFrame)&&(n=Matrix4.clone(i.transform,oldTransformScratch),i.lookAtTransform(t.rotateFrame)),t.rotateInitialCameraAngle=-i.heading,defined(t.rotateFrame)&&i.lookAtTransform(n),t.rotateMouseMoveFunction=function(o){var a,i=e.getBoundingClientRect(),s=new Cartesian2((i.right-i.left)/2,(i.bottom-i.top)/2),r=new Cartesian2(o.clientX-i.left,o.clientY-i.top),n=Cartesian2.subtract(r,s,vectorScratch),c=Math.atan2(-n.y,n.x)-t.rotateInitialCursorAngle,d=CesiumMath.zeroToTwoPi(t.rotateInitialCameraAngle-c),l=t.terria.scene.camera;defined(t.rotateFrame)&&(a=Matrix4.clone(l.transform,oldTransformScratch),l.lookAtTransform(t.rotateFrame));var v=-l.heading;l.rotateRight(d-v),defined(t.rotateFrame)&&l.lookAtTransform(a)},t.rotateMouseUpFunction=function(e){t.isRotating=!1,document.removeEventListener("mousemove",t.rotateMouseMoveFunction,!1),document.removeEventListener("mouseup",t.rotateMouseUpFunction,!1),t.rotateMouseMoveFunction=void 0,t.rotateMouseUpFunction=void 0},document.addEventListener("mousemove",t.rotateMouseMoveFunction,!1),document.addEventListener("mouseup",t.rotateMouseUpFunction,!1)}}}NavigationViewModel.prototype.handleDoubleClick=function(t,e){var o=t.terria.scene,a=o.camera,i=o.screenSpaceCameraController;if(o.mode===SceneMode.MORPHING||!i.enableInputs)return!0;if(t.navigationLocked)return!0;if(o.mode!==SceneMode.COLUMBUS_VIEW||i.enableTranslate){if(o.mode===SceneMode.SCENE3D||o.mode===SceneMode.COLUMBUS_VIEW){if(!i.enableLook)return;if(o.mode===SceneMode.SCENE3D&&!i.enableRotate)return}var s=Utils.getCameraFocus(t.terria,!0,centerScratch);if(defined(s)){var r=o.globe.ellipsoid.cartographicToCartesian(a.positionCartographic,new Cartesian3),n=o.globe.ellipsoid.geodeticSurfaceNormal(s),c=new BoundingSphere(s,0);a.flyToBoundingSphere(c,{offset:new HeadingPitchRange(0,CesiumMath.PI_OVER_TWO-Cartesian3.angleBetween(n,a.directionWC),Cartesian3.distance(r,s)),duration:1.5})}else this.controls[1].resetView()}},NavigationViewModel.create=function(t){var e=new NavigationViewModel(t);return e.show(t.container),e};export default NavigationViewModel;